### ekf config file ###
ekf_filter_node:
    ros__parameters:
        # 滤波器输出位置估计的频率，以赫兹为单位。请注意，滤波器在接收到至少一个输入消息之前不会开始计算。之后，它将以此处指定的频率连续运行，无论是否接收到更多的测量数据。如果未指定，默认值为30。
        frequency: 20.0

        # 传感器超时的时间周期，以秒为单位。在这种情况下，我们将在不进行校正的情况下执行EKF的预测周期。此参数可以被视为滤波器生成新输出的最小频率。如果未指定，默认值为1 / frequency。
        sensor_timeout: 0.1

        # ekf_localization_node 和 ukf_localization_node 都使用3D全向运动模型。如果此参数设置为true，则在状态估计中不会使用3D信息。如果您在平面环境中操作，并且希望忽略例如IMU可能检测到的地面平面中微小变化的影响，请使用此参数。如果未指定，默认值为false。
        two_d_mode: true

        # 使用此参数为 ekf_localization_node 生成的变换提供一个偏移量。这可以用于将变换的时间设定为未来的某个时间点，这在与某些其他软件包交互时是必需的。如果未指定，默认值为0.0。
        transform_time_offset: 0.1

        # 使用此参数指定 tf 监听器等待TF可用的时间。如果未指定，默认值为0.0。
        transform_timeout: 0.1

        # 如果遇到问题，请尝试将此参数设置为true，然后监听/diagnostics_agg主题，以查看节点是否对任何设置或数据不满意。
        print_diagnostics: true

        # 调试模式。将大量信息输出到由 debug_out_file 指定的文件中。将此参数设置为 true 会严重影响节点的性能。如果未指定，默认值为 false。
        debug: false

        # Defaults to "robot_localization_debug.txt" if unspecified. Please specify the full path.
        debug_out_file: /home/xvshuo/work/scl/gazebo_moviet2/log/robot_localization_debug.txt

        # 是否允许旧的测量数据导致重新发布更新后的状态
        permit_corrected_publication: false

        # 是否发布加速度状态。如果未指定，默认值为 false。
        publish_acceleration: false

        # 是否通过 /tf 主题广播变换。如果未指定，默认值为 true。
        publish_tf: true

        # REP-105 (http://www.ros.org/reps/rep-0105.html) specifies four principal coordinate frames: base_link, odom, map, and
        # earth. base_link is the coordinate frame that is affixed to the robot. Both odom and map are world-fixed frames.
        # The robot's position in the odom frame will drift over time, but is accurate in the short term and should be
        # continuous. The odom frame is therefore the best frame for executing local motion plans. The map frame, like the odom
        # frame, is a world-fixed coordinate frame, and while it contains the most globally accurate position estimate for your
        # robot, it is subject to discrete jumps, e.g., due to the fusion of GPS data or a correction from a map-based
        # localization node. The earth frame is used to relate multiple map frames by giving them a common reference frame.
        # ekf_localization_node and ukf_localization_node are not concerned with the earth frame.
        # Here is how to use the following settings:
        # 1. Set the map_frame, odom_frame, and base_link frames to the appropriate frame names for your system.
        #     1a. If your system does not have a map_frame, just remove it, and make sure "world_frame" is set to the value of
        #         odom_frame.
        # 2. If you are fusing continuous position data such as wheel encoder odometry, visual odometry, or IMU data, set
        #   "world_frame" to your odom_frame value. This is the default behavior for robot_localization's state estimation nodes.
        # 3. If you are fusing global absolute position data that is subject to discrete jumps (e.g., GPS or position updates
        # from landmark observations) then:
        #     3a. Set your "world_frame" to your map_frame value
        #     3b. MAKE SURE something else is generating the odom->base_link transform. Note that this can even be another state
        #         estimation node from robot_localization! However, that instance should *not* fuse the global data.
        map_frame: map              # Defaults to "map" if unspecified
        odom_frame: odom            # Defaults to "odom" if unspecified
        base_link_frame: base_link  # Defaults to "base_link" if unspecified
        world_frame: odom           # Defaults to the value of odom_frame if unspecified

        # 支持的输入类型包括nav_msgs/Odometry、geometry_msgs/PoseWithCovarianceStamped、geometry_msgs/TwistWithCovarianceStamped和sensor_msgs/Imu。要添加输入，只需在其"base"名称后附加下一个序列号，例如，odom0、odom1、twist0、twist1、imu0、imu1、imu2等。值应为主题名称。这些参数显然没有默认值，必须指定。
        odom0: /diff_cont/odom  # 第一个里程计数据来源（例如，轮式编码器）

        # 每个传感器读取都会更新滤波器的部分或全部状态。这些选项使您可以更好地控制从每个测量中传递给滤波器的值。例如，如果您有一个里程计消息作为输入，但只想使用其Z位置值，则将整个向量设置为false，除了第三个条目。值的顺序是x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az。请注意，有些消息类型不提供滤波器估计的某些状态变量。例如，TwistWithCovarianceStamped消息没有位置信息，因此在这种情况下，前六个值将毫无意义。如果未指定，每个向量默认为全false，这实际上使得每个传感器的此参数是必需的。
        odom0_config: [true,  true,  false,
                       false, false, false,
                       false, false, false,
                       false, false, true,
                       false, false, false]

        # 如果您有高频数据或使用低频参数值运行，则可能需要增加订阅队列的大小，以便融合更多的测量数据。
        odom0_queue_size: 2

        # [高级] 当使用两个传感器测量一个位姿变量时，可能会出现两者都低估其协方差的情况。这会导致滤波器在每次测量到达时快速在两者之间跳跃。在这些情况下，通常有以下两种解决方案：(a) 修正测量协方差，或 (b) 如果其中一个传感器也测量速度，则让一个传感器测量位姿，另一个测量速度。然而，执行 (a) 或 (b) 并不总是可行，因此我们提供了微分参数。当启用微分模式时，所有绝对位姿数据通过对绝对位姿测量进行微分转换为速度数据。然后，这些速度数据像往常一样进行积分。注意：这仅适用于提供位姿测量的传感器；对扭转测量设置微分为 true 没有任何效果。
        odom0_differential: false

        # [高级] 当节点启动时，如果此参数为 true，则第一个测量值将被视为所有未来测量的“零点”。虽然您可以通过微分参数实现相同的效果，但关键区别在于，相对参数不会在积分之前将测量值转换为速度。如果您只是希望某个传感器的测量值从 0 开始，请将此参数设置为 true。
        odom0_relative: false

        # [高级] 是否使用 child_frame_id 的起始位姿作为里程计的原点。
# 注意：这与将 odom0_relative 设置为 true 不同，因为当 child_frame 与 base_link_frame 不同时，base_link 的旋转将耦合到 child_frame 的平移中。
# 如果要融合与 base_link 刚性连接但与 base_link 有非零偏移的次级里程计源，请将此参数设置为 true。
        odom0_pose_use_child_frame: false

        # [高级] 如果您的数据容易出现异常值，请使用这些阈值设置（以马氏距离表示）来控制传感器测量值允许偏离当前车辆状态的距离。
# 如果未指定，每个阈值默认为 numeric_limits<double>::max()。
# 强烈建议在不需要时删除这些参数。数据在位姿和扭转变量的层面上指定，而不是单独为每个变量指定。
# 对于同时具有位姿和扭转数据的消息，该参数指定我们将阈值应用于消息的哪一部分。
        # 如果里程计数据中提供的位姿变化（例如机器人的位置或方向）超过了该阈值（例如5米或5弧度），则该数据点将被视为异常数据并被拒绝。
        odom0_pose_rejection_threshold: 5.0
        # 如果里程计数据中提供的速度变化（例如机器人沿x、y或z轴的线速度或角速度）超过了该阈值（例如1米/秒或1弧度/秒），则该数据点将被视为异常数据并被拒绝。
        odom0_twist_rejection_threshold: 1.0

        imu0: /imu/data
        imu0_config: [false, false, false,
                      false, false, true,
                      false, false, false,
                      false, false, true,
                      true,  false, false]
        imu0_differential: false
        imu0_relative: true
        imu0_queue_size: 10
        imu0_pose_rejection_threshold: 0.8                 # Note the difference in parameter names
        imu0_twist_rejection_threshold: 0.8                #
        imu0_linear_acceleration_rejection_threshold: 0.8  #

        # [高级] 一些IMU会自动移除重力加速度，而另一些则不会。如果您的IMU不会自动移除重力加速度，请将此参数设置为true，并确保您的数据符合REP-103标准，特别是数据应在ENU坐标系中。
        imu0_remove_gravitational_acceleration: true

        # [高级] EKF 和 UKF 模型遵循标准的预测/校正周期。在预测期间，如果没有加速度参考，则时间 t+1 的速度将被简单地预测为与时间 t 的速度相同。在校正期间，这个预测值将与测量值融合，以生成新的速度估计值。这可能会带来问题，因为最终的速度实际上是旧速度和新速度的加权平均值。当这个速度被积分到一个新的位姿中时，结果可能会导致收敛缓慢。这种效应在旋转期间使用 LIDAR 数据时尤其明显。为了解决这个问题，用户可以尝试增加相关速度变量的过程噪声协方差，或者减少测量中相关变量的方差。此外，用户还可以利用在进行预测时发出的控制命令。如果使用控制命令，它将被转换为加速度项，并在预测期间使用。请注意，如果从某个输入中获得了相关变量的加速度测量值，则控制项将被忽略。
# 是否在预测期间使用控制输入。如果未指定，默认值为 false。
        use_control: true

        # 输入（假定为 cmd_vel）是 geometry_msgs/Twist 还是 geometry_msgs/TwistStamped 消息。如果未指定，默认值为 false。
        stamped_control: true

        # 最后发出的控制命令将在此期间用于预测。如果未指定，默认值为 0.2。
        control_timeout: 0.2

        # 哪些速度被控制。顺序是 vx, vy, vz, vroll, vpitch, vyaw。
        control_config: [true, false, false, false, false, true]

        # 对加速度的大小进行限制。应与您的机器人的运动学相匹配。
        acceleration_limits: [1.3, 0.0, 0.0, 0.0, 0.0, 3.4]

        # 减速度限制，机器人的加速度和减速度限制并不总是相同。
        deceleration_limits: [1.3, 0.0, 0.0, 0.0, 0.0, 4.5]

        # 如果您的机器人无法瞬时达到其加速度限制，可以使用这些增益来控制允许的变化。
        acceleration_gains: [0.8, 0.0, 0.0, 0.0, 0.0, 0.9]

        # 如果您的机器人无法瞬时达到其减速度限制，可以使用这些增益来控制允许的变化。
        deceleration_gains: [1.0, 0.0, 0.0, 0.0, 0.0, 1.0]

        # [高级] 过程噪声协方差矩阵可能难以调整，并且每个应用程序的需求可能不同，因此将其作为配置参数公开。该矩阵表示在每次预测步骤后添加到总误差中的噪声。全向运动模型与系统匹配得越好，这些值就可以越小。然而，如果用户发现某个变量收敛缓慢，一种方法是增加该变量的过程噪声协方差对角线值，这将导致滤波器的预测误差变大，从而使滤波器在校正期间更信任传入的测量值。值的顺序是 x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az。如果未指定，默认为下方的矩阵。
# 注意：协方差矩阵的指定可能很繁琐，因此此包中的所有矩阵参数都支持完整指定或仅指定对角线值。
        imu0_noise_covariance: [0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.06, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.03, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.06, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.06, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.025, 0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.04, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.02, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.015]
        
        odom0_noise_covariance: [0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.06, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.03, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.06, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.06, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.025, 0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.025, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.04, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.02, 0.0, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0,
                                   0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.015]

        # [高级] 这表示状态估计误差协方差矩阵的初始值。将对角线值（方差）设置为较大值将导致相关变量的初始测量快速收敛。用户应注意不要对不会直接测量的变量使用较大值。值的顺序是 x, y, z, roll, pitch, yaw, vx, vy, vz, vroll, vpitch, vyaw, ax, ay, az。如果未指定，默认为下方的对角线值。在此示例中，我们仅指定矩阵的对角线值。
        initial_estimate_covariance: [1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9, 1e-9]
